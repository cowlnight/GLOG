# CMake generated Testfile for 
# Source directory: C:/Users/840/Downloads/glog-master/glog-master
# Build directory: C:/Users/840/Downloads/glog-master/glog-master/build2
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(demangle "C:/Users/840/Downloads/glog-master/glog-master/build2/Debug/demangle_unittest.exe")
  set_tests_properties(demangle PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;691;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(demangle "C:/Users/840/Downloads/glog-master/glog-master/build2/Release/demangle_unittest.exe")
  set_tests_properties(demangle PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;691;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(demangle "C:/Users/840/Downloads/glog-master/glog-master/build2/MinSizeRel/demangle_unittest.exe")
  set_tests_properties(demangle PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;691;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(demangle "C:/Users/840/Downloads/glog-master/glog-master/build2/RelWithDebInfo/demangle_unittest.exe")
  set_tests_properties(demangle PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;691;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
else()
  add_test(demangle NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(logging "C:/Users/840/Downloads/glog-master/glog-master/build2/Debug/logging_unittest.exe")
  set_tests_properties(logging PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;692;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(logging "C:/Users/840/Downloads/glog-master/glog-master/build2/Release/logging_unittest.exe")
  set_tests_properties(logging PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;692;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(logging "C:/Users/840/Downloads/glog-master/glog-master/build2/MinSizeRel/logging_unittest.exe")
  set_tests_properties(logging PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;692;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(logging "C:/Users/840/Downloads/glog-master/glog-master/build2/RelWithDebInfo/logging_unittest.exe")
  set_tests_properties(logging PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;692;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
else()
  add_test(logging NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(signalhandler "C:/Users/840/Downloads/glog-master/glog-master/build2/Debug/signalhandler_unittest.exe")
  set_tests_properties(signalhandler PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;695;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(signalhandler "C:/Users/840/Downloads/glog-master/glog-master/build2/Release/signalhandler_unittest.exe")
  set_tests_properties(signalhandler PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;695;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(signalhandler "C:/Users/840/Downloads/glog-master/glog-master/build2/MinSizeRel/signalhandler_unittest.exe")
  set_tests_properties(signalhandler PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;695;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(signalhandler "C:/Users/840/Downloads/glog-master/glog-master/build2/RelWithDebInfo/signalhandler_unittest.exe")
  set_tests_properties(signalhandler PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;695;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
else()
  add_test(signalhandler NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(stacktrace "C:/Users/840/Downloads/glog-master/glog-master/build2/Debug/stacktrace_unittest.exe")
  set_tests_properties(stacktrace PROPERTIES  TIMEOUT "30" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;699;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(stacktrace "C:/Users/840/Downloads/glog-master/glog-master/build2/Release/stacktrace_unittest.exe")
  set_tests_properties(stacktrace PROPERTIES  TIMEOUT "30" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;699;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(stacktrace "C:/Users/840/Downloads/glog-master/glog-master/build2/MinSizeRel/stacktrace_unittest.exe")
  set_tests_properties(stacktrace PROPERTIES  TIMEOUT "30" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;699;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(stacktrace "C:/Users/840/Downloads/glog-master/glog-master/build2/RelWithDebInfo/stacktrace_unittest.exe")
  set_tests_properties(stacktrace PROPERTIES  TIMEOUT "30" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;699;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
else()
  add_test(stacktrace NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(stl_logging "C:/Users/840/Downloads/glog-master/glog-master/build2/Debug/stl_logging_unittest.exe")
  set_tests_properties(stl_logging PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;703;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(stl_logging "C:/Users/840/Downloads/glog-master/glog-master/build2/Release/stl_logging_unittest.exe")
  set_tests_properties(stl_logging PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;703;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(stl_logging "C:/Users/840/Downloads/glog-master/glog-master/build2/MinSizeRel/stl_logging_unittest.exe")
  set_tests_properties(stl_logging PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;703;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(stl_logging "C:/Users/840/Downloads/glog-master/glog-master/build2/RelWithDebInfo/stl_logging_unittest.exe")
  set_tests_properties(stl_logging PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;703;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
else()
  add_test(stl_logging NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(symbolize "C:/Users/840/Downloads/glog-master/glog-master/build2/Debug/symbolize_unittest.exe")
  set_tests_properties(symbolize PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;706;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(symbolize "C:/Users/840/Downloads/glog-master/glog-master/build2/Release/symbolize_unittest.exe")
  set_tests_properties(symbolize PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;706;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(symbolize "C:/Users/840/Downloads/glog-master/glog-master/build2/MinSizeRel/symbolize_unittest.exe")
  set_tests_properties(symbolize PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;706;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(symbolize "C:/Users/840/Downloads/glog-master/glog-master/build2/RelWithDebInfo/symbolize_unittest.exe")
  set_tests_properties(symbolize PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;706;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
else()
  add_test(symbolize NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cmake_package_config_init "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "-DTEST_BINARY_DIR=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config" "-DINITIAL_CACHE=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/glog_package_config_initial_cache.cmake" "-DCACHEVARS=set (BUILD_SHARED_LIBS OFF CACHE BOOL \"Build shared libraries\")
set (BUILD_TESTING ON CACHE BOOL \"Build the testing tree.\")
set (BZRCOMMAND \"BZRCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_CONFIGURATION_TYPES \"Debug;Release;MinSizeRel;RelWithDebInfo\" CACHE STRING \"Semicolon separated list of supported configuration types, only supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything else will be ignored.\")
set (CMAKE_CXX_FLAGS \"/DWIN32 /D_WINDOWS /W3 /GR /EHsc\" CACHE STRING \"Flags used by the CXX compiler during all build types.\")
set (CMAKE_CXX_FLAGS_DEBUG \"/MDd /Zi /Ob0 /Od /RTC1\" CACHE STRING \"Flags used by the CXX compiler during DEBUG builds.\")
set (CMAKE_CXX_FLAGS_MINSIZEREL \"/MD /O1 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the CXX compiler during MINSIZEREL builds.\")
set (CMAKE_CXX_FLAGS_RELEASE \"/MD /O2 /Ob2 /DNDEBUG\" CACHE STRING \"Flags used by the CXX compiler during RELEASE builds.\")
set (CMAKE_CXX_FLAGS_RELWITHDEBINFO \"/MD /Zi /O2 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the CXX compiler during RELWITHDEBINFO builds.\")
set (CMAKE_CXX_STANDARD_LIBRARIES \"kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib\" CACHE STRING \"Libraries linked by default with all C++ applications.\")
set (CMAKE_C_FLAGS \"/DWIN32 /D_WINDOWS /W3\" CACHE STRING \"Flags used by the C compiler during all build types.\")
set (CMAKE_C_FLAGS_DEBUG \"/MDd /Zi /Ob0 /Od /RTC1\" CACHE STRING \"Flags used by the C compiler during DEBUG builds.\")
set (CMAKE_C_FLAGS_MINSIZEREL \"/MD /O1 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the C compiler during MINSIZEREL builds.\")
set (CMAKE_C_FLAGS_RELEASE \"/MD /O2 /Ob2 /DNDEBUG\" CACHE STRING \"Flags used by the C compiler during RELEASE builds.\")
set (CMAKE_C_FLAGS_RELWITHDEBINFO \"/MD /Zi /O2 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the C compiler during RELWITHDEBINFO builds.\")
set (CMAKE_C_STANDARD_LIBRARIES \"kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib\" CACHE STRING \"Libraries linked by default with all C applications.\")
set (CMAKE_EXE_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during all build types.\")
set (CMAKE_EXE_LINKER_FLAGS_DEBUG \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during DEBUG builds.\")
set (CMAKE_EXE_LINKER_FLAGS_MINSIZEREL \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during MINSIZEREL builds.\")
set (CMAKE_EXE_LINKER_FLAGS_RELEASE \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during RELEASE builds.\")
set (CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during RELWITHDEBINFO builds.\")
set (CMAKE_INSTALL_BINDIR \"bin\" CACHE PATH \"User executables (bin)\")
set (CMAKE_INSTALL_DATAROOTDIR \"share\" CACHE PATH \"Read-only architecture-independent data root (share)\")
set (CMAKE_INSTALL_INCLUDEDIR \"include\" CACHE PATH \"C header files (include)\")
set (CMAKE_INSTALL_LIBDIR \"lib\" CACHE PATH \"Object code libraries (lib)\")
set (CMAKE_INSTALL_LIBEXECDIR \"libexec\" CACHE PATH \"Program executables (libexec)\")
set (CMAKE_INSTALL_LOCALSTATEDIR \"var\" CACHE PATH \"Modifiable single-machine data (var)\")
set (CMAKE_INSTALL_OLDINCLUDEDIR \"/usr/include\" CACHE PATH \"C header files for non-gcc (/usr/include)\")
set (CMAKE_INSTALL_PREFIX \"C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64\" CACHE PATH \"Install path prefix, prepended onto install directories.\")
set (CMAKE_INSTALL_SBINDIR \"sbin\" CACHE PATH \"System admin executables (sbin)\")
set (CMAKE_INSTALL_SHAREDSTATEDIR \"com\" CACHE PATH \"Modifiable architecture-independent data (com)\")
set (CMAKE_INSTALL_SYSCONFDIR \"etc\" CACHE PATH \"Read-only single-machine data (etc)\")
set (CMAKE_LINKER \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/link.exe\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_LINKER \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/link.exe\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_MODULE_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during the creation of modules during all build types.\")
set (CMAKE_MODULE_LINKER_FLAGS_DEBUG \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of modules during DEBUG builds.\")
set (CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of modules during MINSIZEREL builds.\")
set (CMAKE_MODULE_LINKER_FLAGS_RELEASE \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of modules during RELEASE builds.\")
set (CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.\")
set (CMAKE_MT \"CMAKE_MT-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_MT \"CMAKE_MT-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_RC_COMPILER \"rc\" CACHE FILEPATH \"RC compiler\")
set (CMAKE_RC_COMPILER \"rc\" CACHE FILEPATH \"RC compiler\")
set (CMAKE_RC_FLAGS \"-DWIN32\" CACHE STRING \"Flags for Windows Resource Compiler during all build types.\")
set (CMAKE_RC_FLAGS_DEBUG \"-D_DEBUG\" CACHE STRING \"Flags for Windows Resource Compiler during DEBUG builds.\")
set (CMAKE_SHARED_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during all build types.\")
set (CMAKE_SHARED_LINKER_FLAGS_DEBUG \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during DEBUG builds.\")
set (CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.\")
set (CMAKE_SHARED_LINKER_FLAGS_RELEASE \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during RELEASE builds.\")
set (CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.\")
set (CMAKE_SKIP_INSTALL_RPATH OFF CACHE BOOL \"If set, runtime paths are not added when installing shared libraries, but are added when building.\")
set (CMAKE_SKIP_RPATH OFF CACHE BOOL \"If set, runtime paths are not added when using shared libraries.\")
set (CMAKE_STATIC_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during the creation of static libraries during all build types.\")
set (CMAKE_VERBOSE_MAKEFILE OFF CACHE BOOL \"If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.\")
set (COVERAGE_COMMAND \"C:/MinGW/bin/gcov.exe\" CACHE FILEPATH \"Path to the coverage program that CTest uses for performing coverage inspection\")
set (COVERAGE_EXTRA_FLAGS \"-l\" CACHE STRING \"Extra command line flags to pass to the coverage tool\")
set (CPACK_BINARY_7Z OFF CACHE BOOL \"Enable to build 7-Zip packages\")
set (CPACK_BINARY_IFW OFF CACHE BOOL \"Enable to build IFW packages\")
set (CPACK_BINARY_NSIS ON CACHE BOOL \"Enable to build NSIS packages\")
set (CPACK_BINARY_NUGET OFF CACHE BOOL \"Enable to build NuGet packages\")
set (CPACK_BINARY_WIX OFF CACHE BOOL \"Enable to build WiX packages\")
set (CPACK_BINARY_ZIP OFF CACHE BOOL \"Enable to build ZIP packages\")
set (CPACK_SOURCE_7Z ON CACHE BOOL \"Enable to build 7-Zip source packages\")
set (CPACK_SOURCE_ZIP ON CACHE BOOL \"Enable to build ZIP source packages\")
set (CTEST_SUBMIT_RETRY_COUNT \"3\" CACHE STRING \"How many times to retry timed-out CTest submissions.\")
set (CTEST_SUBMIT_RETRY_DELAY \"5\" CACHE STRING \"How long to wait between timed-out CTest submissions.\")
set (CVSCOMMAND \"CVSCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CVS_UPDATE_OPTIONS \"-d -A -P\" CACHE STRING \"Options passed to the cvs update command.\")
set (DART_TESTING_TIMEOUT \"1500\" CACHE STRING \"Maximum time allowed before CTest will kill the test.\")
set (GITCOMMAND \"C:/Program Files/Git/cmd/git.exe\" CACHE FILEPATH \"Path to a program.\")
set (HGCOMMAND \"HGCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (MAKECOMMAND \"C:\\Users\\840\\Downloads\\cmake-3.16.0-win64-x64\\cmake-3.16.0-win64-x64\\bin\\cmake.exe --build . --config \\\"\${CTEST_CONFIGURATION_TYPE}\\\"\" CACHE STRING \"Command to build the project\")
set (MEMORYCHECK_COMMAND \"MEMORYCHECK_COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to the memory checking command, used for memory error detection.\")
set (P4COMMAND \"P4COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (PRINT_UNSYMBOLIZED_STACK_TRACES OFF CACHE BOOL \"Print raw pc values on symbolization failure\")
set (SITE \"DESKTOP-C0459JH\" CACHE STRING \"Name of the computer/site where compile is being run\")
set (SLURM_SBATCH_COMMAND \"SLURM_SBATCH_COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to the SLURM sbatch executable\")
set (SLURM_SRUN_COMMAND \"SLURM_SRUN_COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to the SLURM srun executable\")
set (SVNCOMMAND \"SVNCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (Unwind_INCLUDE_DIR \"Unwind_INCLUDE_DIR-NOTFOUND\" CACHE PATH \"unwind include directory\")
set (Unwind_LIBRARY \"Unwind_LIBRARY-NOTFOUND\" CACHE FILEPATH \"unwind library\")
set (Unwind_PLATFORM_LIBRARY \"Unwind_PLATFORM_LIBRARY-NOTFOUND\" CACHE FILEPATH \"unwind library platform\")
set (WITH_GFLAGS OFF CACHE BOOL \"Use gflags\")
set (WITH_PKGCONFIG ON CACHE BOOL \"Enable pkg-config support\")
set (WITH_THREADS ON CACHE BOOL \"Enable multithreading support\")
set (WITH_TLS ON CACHE BOOL \"Enable Thread Local Storage (TLS) support\")
set (WITH_UNWIND ON CACHE BOOL \"Enable libunwind support\")
set (gflags_DIR \"gflags_DIR-NOTFOUND\" CACHE PATH \"The directory containing a CMake configuration file for gflags.\")
" "-P" "C:/Users/840/Downloads/glog-master/glog-master/cmake/TestInitPackageConfig.cmake")
  set_tests_properties(cmake_package_config_init PROPERTIES  FIXTURES_SETUP "cmake_package_config" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;718;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cmake_package_config_init "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "-DTEST_BINARY_DIR=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config" "-DINITIAL_CACHE=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/glog_package_config_initial_cache.cmake" "-DCACHEVARS=set (BUILD_SHARED_LIBS OFF CACHE BOOL \"Build shared libraries\")
set (BUILD_TESTING ON CACHE BOOL \"Build the testing tree.\")
set (BZRCOMMAND \"BZRCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_CONFIGURATION_TYPES \"Debug;Release;MinSizeRel;RelWithDebInfo\" CACHE STRING \"Semicolon separated list of supported configuration types, only supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything else will be ignored.\")
set (CMAKE_CXX_FLAGS \"/DWIN32 /D_WINDOWS /W3 /GR /EHsc\" CACHE STRING \"Flags used by the CXX compiler during all build types.\")
set (CMAKE_CXX_FLAGS_DEBUG \"/MDd /Zi /Ob0 /Od /RTC1\" CACHE STRING \"Flags used by the CXX compiler during DEBUG builds.\")
set (CMAKE_CXX_FLAGS_MINSIZEREL \"/MD /O1 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the CXX compiler during MINSIZEREL builds.\")
set (CMAKE_CXX_FLAGS_RELEASE \"/MD /O2 /Ob2 /DNDEBUG\" CACHE STRING \"Flags used by the CXX compiler during RELEASE builds.\")
set (CMAKE_CXX_FLAGS_RELWITHDEBINFO \"/MD /Zi /O2 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the CXX compiler during RELWITHDEBINFO builds.\")
set (CMAKE_CXX_STANDARD_LIBRARIES \"kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib\" CACHE STRING \"Libraries linked by default with all C++ applications.\")
set (CMAKE_C_FLAGS \"/DWIN32 /D_WINDOWS /W3\" CACHE STRING \"Flags used by the C compiler during all build types.\")
set (CMAKE_C_FLAGS_DEBUG \"/MDd /Zi /Ob0 /Od /RTC1\" CACHE STRING \"Flags used by the C compiler during DEBUG builds.\")
set (CMAKE_C_FLAGS_MINSIZEREL \"/MD /O1 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the C compiler during MINSIZEREL builds.\")
set (CMAKE_C_FLAGS_RELEASE \"/MD /O2 /Ob2 /DNDEBUG\" CACHE STRING \"Flags used by the C compiler during RELEASE builds.\")
set (CMAKE_C_FLAGS_RELWITHDEBINFO \"/MD /Zi /O2 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the C compiler during RELWITHDEBINFO builds.\")
set (CMAKE_C_STANDARD_LIBRARIES \"kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib\" CACHE STRING \"Libraries linked by default with all C applications.\")
set (CMAKE_EXE_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during all build types.\")
set (CMAKE_EXE_LINKER_FLAGS_DEBUG \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during DEBUG builds.\")
set (CMAKE_EXE_LINKER_FLAGS_MINSIZEREL \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during MINSIZEREL builds.\")
set (CMAKE_EXE_LINKER_FLAGS_RELEASE \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during RELEASE builds.\")
set (CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during RELWITHDEBINFO builds.\")
set (CMAKE_INSTALL_BINDIR \"bin\" CACHE PATH \"User executables (bin)\")
set (CMAKE_INSTALL_DATAROOTDIR \"share\" CACHE PATH \"Read-only architecture-independent data root (share)\")
set (CMAKE_INSTALL_INCLUDEDIR \"include\" CACHE PATH \"C header files (include)\")
set (CMAKE_INSTALL_LIBDIR \"lib\" CACHE PATH \"Object code libraries (lib)\")
set (CMAKE_INSTALL_LIBEXECDIR \"libexec\" CACHE PATH \"Program executables (libexec)\")
set (CMAKE_INSTALL_LOCALSTATEDIR \"var\" CACHE PATH \"Modifiable single-machine data (var)\")
set (CMAKE_INSTALL_OLDINCLUDEDIR \"/usr/include\" CACHE PATH \"C header files for non-gcc (/usr/include)\")
set (CMAKE_INSTALL_PREFIX \"C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64\" CACHE PATH \"Install path prefix, prepended onto install directories.\")
set (CMAKE_INSTALL_SBINDIR \"sbin\" CACHE PATH \"System admin executables (sbin)\")
set (CMAKE_INSTALL_SHAREDSTATEDIR \"com\" CACHE PATH \"Modifiable architecture-independent data (com)\")
set (CMAKE_INSTALL_SYSCONFDIR \"etc\" CACHE PATH \"Read-only single-machine data (etc)\")
set (CMAKE_LINKER \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/link.exe\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_LINKER \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/link.exe\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_MODULE_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during the creation of modules during all build types.\")
set (CMAKE_MODULE_LINKER_FLAGS_DEBUG \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of modules during DEBUG builds.\")
set (CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of modules during MINSIZEREL builds.\")
set (CMAKE_MODULE_LINKER_FLAGS_RELEASE \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of modules during RELEASE builds.\")
set (CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.\")
set (CMAKE_MT \"CMAKE_MT-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_MT \"CMAKE_MT-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_RC_COMPILER \"rc\" CACHE FILEPATH \"RC compiler\")
set (CMAKE_RC_COMPILER \"rc\" CACHE FILEPATH \"RC compiler\")
set (CMAKE_RC_FLAGS \"-DWIN32\" CACHE STRING \"Flags for Windows Resource Compiler during all build types.\")
set (CMAKE_RC_FLAGS_DEBUG \"-D_DEBUG\" CACHE STRING \"Flags for Windows Resource Compiler during DEBUG builds.\")
set (CMAKE_SHARED_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during all build types.\")
set (CMAKE_SHARED_LINKER_FLAGS_DEBUG \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during DEBUG builds.\")
set (CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.\")
set (CMAKE_SHARED_LINKER_FLAGS_RELEASE \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during RELEASE builds.\")
set (CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.\")
set (CMAKE_SKIP_INSTALL_RPATH OFF CACHE BOOL \"If set, runtime paths are not added when installing shared libraries, but are added when building.\")
set (CMAKE_SKIP_RPATH OFF CACHE BOOL \"If set, runtime paths are not added when using shared libraries.\")
set (CMAKE_STATIC_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during the creation of static libraries during all build types.\")
set (CMAKE_VERBOSE_MAKEFILE OFF CACHE BOOL \"If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.\")
set (COVERAGE_COMMAND \"C:/MinGW/bin/gcov.exe\" CACHE FILEPATH \"Path to the coverage program that CTest uses for performing coverage inspection\")
set (COVERAGE_EXTRA_FLAGS \"-l\" CACHE STRING \"Extra command line flags to pass to the coverage tool\")
set (CPACK_BINARY_7Z OFF CACHE BOOL \"Enable to build 7-Zip packages\")
set (CPACK_BINARY_IFW OFF CACHE BOOL \"Enable to build IFW packages\")
set (CPACK_BINARY_NSIS ON CACHE BOOL \"Enable to build NSIS packages\")
set (CPACK_BINARY_NUGET OFF CACHE BOOL \"Enable to build NuGet packages\")
set (CPACK_BINARY_WIX OFF CACHE BOOL \"Enable to build WiX packages\")
set (CPACK_BINARY_ZIP OFF CACHE BOOL \"Enable to build ZIP packages\")
set (CPACK_SOURCE_7Z ON CACHE BOOL \"Enable to build 7-Zip source packages\")
set (CPACK_SOURCE_ZIP ON CACHE BOOL \"Enable to build ZIP source packages\")
set (CTEST_SUBMIT_RETRY_COUNT \"3\" CACHE STRING \"How many times to retry timed-out CTest submissions.\")
set (CTEST_SUBMIT_RETRY_DELAY \"5\" CACHE STRING \"How long to wait between timed-out CTest submissions.\")
set (CVSCOMMAND \"CVSCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CVS_UPDATE_OPTIONS \"-d -A -P\" CACHE STRING \"Options passed to the cvs update command.\")
set (DART_TESTING_TIMEOUT \"1500\" CACHE STRING \"Maximum time allowed before CTest will kill the test.\")
set (GITCOMMAND \"C:/Program Files/Git/cmd/git.exe\" CACHE FILEPATH \"Path to a program.\")
set (HGCOMMAND \"HGCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (MAKECOMMAND \"C:\\Users\\840\\Downloads\\cmake-3.16.0-win64-x64\\cmake-3.16.0-win64-x64\\bin\\cmake.exe --build . --config \\\"\${CTEST_CONFIGURATION_TYPE}\\\"\" CACHE STRING \"Command to build the project\")
set (MEMORYCHECK_COMMAND \"MEMORYCHECK_COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to the memory checking command, used for memory error detection.\")
set (P4COMMAND \"P4COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (PRINT_UNSYMBOLIZED_STACK_TRACES OFF CACHE BOOL \"Print raw pc values on symbolization failure\")
set (SITE \"DESKTOP-C0459JH\" CACHE STRING \"Name of the computer/site where compile is being run\")
set (SLURM_SBATCH_COMMAND \"SLURM_SBATCH_COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to the SLURM sbatch executable\")
set (SLURM_SRUN_COMMAND \"SLURM_SRUN_COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to the SLURM srun executable\")
set (SVNCOMMAND \"SVNCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (Unwind_INCLUDE_DIR \"Unwind_INCLUDE_DIR-NOTFOUND\" CACHE PATH \"unwind include directory\")
set (Unwind_LIBRARY \"Unwind_LIBRARY-NOTFOUND\" CACHE FILEPATH \"unwind library\")
set (Unwind_PLATFORM_LIBRARY \"Unwind_PLATFORM_LIBRARY-NOTFOUND\" CACHE FILEPATH \"unwind library platform\")
set (WITH_GFLAGS OFF CACHE BOOL \"Use gflags\")
set (WITH_PKGCONFIG ON CACHE BOOL \"Enable pkg-config support\")
set (WITH_THREADS ON CACHE BOOL \"Enable multithreading support\")
set (WITH_TLS ON CACHE BOOL \"Enable Thread Local Storage (TLS) support\")
set (WITH_UNWIND ON CACHE BOOL \"Enable libunwind support\")
set (gflags_DIR \"gflags_DIR-NOTFOUND\" CACHE PATH \"The directory containing a CMake configuration file for gflags.\")
" "-P" "C:/Users/840/Downloads/glog-master/glog-master/cmake/TestInitPackageConfig.cmake")
  set_tests_properties(cmake_package_config_init PROPERTIES  FIXTURES_SETUP "cmake_package_config" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;718;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cmake_package_config_init "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "-DTEST_BINARY_DIR=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config" "-DINITIAL_CACHE=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/glog_package_config_initial_cache.cmake" "-DCACHEVARS=set (BUILD_SHARED_LIBS OFF CACHE BOOL \"Build shared libraries\")
set (BUILD_TESTING ON CACHE BOOL \"Build the testing tree.\")
set (BZRCOMMAND \"BZRCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_CONFIGURATION_TYPES \"Debug;Release;MinSizeRel;RelWithDebInfo\" CACHE STRING \"Semicolon separated list of supported configuration types, only supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything else will be ignored.\")
set (CMAKE_CXX_FLAGS \"/DWIN32 /D_WINDOWS /W3 /GR /EHsc\" CACHE STRING \"Flags used by the CXX compiler during all build types.\")
set (CMAKE_CXX_FLAGS_DEBUG \"/MDd /Zi /Ob0 /Od /RTC1\" CACHE STRING \"Flags used by the CXX compiler during DEBUG builds.\")
set (CMAKE_CXX_FLAGS_MINSIZEREL \"/MD /O1 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the CXX compiler during MINSIZEREL builds.\")
set (CMAKE_CXX_FLAGS_RELEASE \"/MD /O2 /Ob2 /DNDEBUG\" CACHE STRING \"Flags used by the CXX compiler during RELEASE builds.\")
set (CMAKE_CXX_FLAGS_RELWITHDEBINFO \"/MD /Zi /O2 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the CXX compiler during RELWITHDEBINFO builds.\")
set (CMAKE_CXX_STANDARD_LIBRARIES \"kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib\" CACHE STRING \"Libraries linked by default with all C++ applications.\")
set (CMAKE_C_FLAGS \"/DWIN32 /D_WINDOWS /W3\" CACHE STRING \"Flags used by the C compiler during all build types.\")
set (CMAKE_C_FLAGS_DEBUG \"/MDd /Zi /Ob0 /Od /RTC1\" CACHE STRING \"Flags used by the C compiler during DEBUG builds.\")
set (CMAKE_C_FLAGS_MINSIZEREL \"/MD /O1 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the C compiler during MINSIZEREL builds.\")
set (CMAKE_C_FLAGS_RELEASE \"/MD /O2 /Ob2 /DNDEBUG\" CACHE STRING \"Flags used by the C compiler during RELEASE builds.\")
set (CMAKE_C_FLAGS_RELWITHDEBINFO \"/MD /Zi /O2 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the C compiler during RELWITHDEBINFO builds.\")
set (CMAKE_C_STANDARD_LIBRARIES \"kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib\" CACHE STRING \"Libraries linked by default with all C applications.\")
set (CMAKE_EXE_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during all build types.\")
set (CMAKE_EXE_LINKER_FLAGS_DEBUG \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during DEBUG builds.\")
set (CMAKE_EXE_LINKER_FLAGS_MINSIZEREL \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during MINSIZEREL builds.\")
set (CMAKE_EXE_LINKER_FLAGS_RELEASE \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during RELEASE builds.\")
set (CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during RELWITHDEBINFO builds.\")
set (CMAKE_INSTALL_BINDIR \"bin\" CACHE PATH \"User executables (bin)\")
set (CMAKE_INSTALL_DATAROOTDIR \"share\" CACHE PATH \"Read-only architecture-independent data root (share)\")
set (CMAKE_INSTALL_INCLUDEDIR \"include\" CACHE PATH \"C header files (include)\")
set (CMAKE_INSTALL_LIBDIR \"lib\" CACHE PATH \"Object code libraries (lib)\")
set (CMAKE_INSTALL_LIBEXECDIR \"libexec\" CACHE PATH \"Program executables (libexec)\")
set (CMAKE_INSTALL_LOCALSTATEDIR \"var\" CACHE PATH \"Modifiable single-machine data (var)\")
set (CMAKE_INSTALL_OLDINCLUDEDIR \"/usr/include\" CACHE PATH \"C header files for non-gcc (/usr/include)\")
set (CMAKE_INSTALL_PREFIX \"C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64\" CACHE PATH \"Install path prefix, prepended onto install directories.\")
set (CMAKE_INSTALL_SBINDIR \"sbin\" CACHE PATH \"System admin executables (sbin)\")
set (CMAKE_INSTALL_SHAREDSTATEDIR \"com\" CACHE PATH \"Modifiable architecture-independent data (com)\")
set (CMAKE_INSTALL_SYSCONFDIR \"etc\" CACHE PATH \"Read-only single-machine data (etc)\")
set (CMAKE_LINKER \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/link.exe\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_LINKER \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/link.exe\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_MODULE_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during the creation of modules during all build types.\")
set (CMAKE_MODULE_LINKER_FLAGS_DEBUG \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of modules during DEBUG builds.\")
set (CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of modules during MINSIZEREL builds.\")
set (CMAKE_MODULE_LINKER_FLAGS_RELEASE \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of modules during RELEASE builds.\")
set (CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.\")
set (CMAKE_MT \"CMAKE_MT-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_MT \"CMAKE_MT-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_RC_COMPILER \"rc\" CACHE FILEPATH \"RC compiler\")
set (CMAKE_RC_COMPILER \"rc\" CACHE FILEPATH \"RC compiler\")
set (CMAKE_RC_FLAGS \"-DWIN32\" CACHE STRING \"Flags for Windows Resource Compiler during all build types.\")
set (CMAKE_RC_FLAGS_DEBUG \"-D_DEBUG\" CACHE STRING \"Flags for Windows Resource Compiler during DEBUG builds.\")
set (CMAKE_SHARED_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during all build types.\")
set (CMAKE_SHARED_LINKER_FLAGS_DEBUG \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during DEBUG builds.\")
set (CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.\")
set (CMAKE_SHARED_LINKER_FLAGS_RELEASE \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during RELEASE builds.\")
set (CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.\")
set (CMAKE_SKIP_INSTALL_RPATH OFF CACHE BOOL \"If set, runtime paths are not added when installing shared libraries, but are added when building.\")
set (CMAKE_SKIP_RPATH OFF CACHE BOOL \"If set, runtime paths are not added when using shared libraries.\")
set (CMAKE_STATIC_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during the creation of static libraries during all build types.\")
set (CMAKE_VERBOSE_MAKEFILE OFF CACHE BOOL \"If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.\")
set (COVERAGE_COMMAND \"C:/MinGW/bin/gcov.exe\" CACHE FILEPATH \"Path to the coverage program that CTest uses for performing coverage inspection\")
set (COVERAGE_EXTRA_FLAGS \"-l\" CACHE STRING \"Extra command line flags to pass to the coverage tool\")
set (CPACK_BINARY_7Z OFF CACHE BOOL \"Enable to build 7-Zip packages\")
set (CPACK_BINARY_IFW OFF CACHE BOOL \"Enable to build IFW packages\")
set (CPACK_BINARY_NSIS ON CACHE BOOL \"Enable to build NSIS packages\")
set (CPACK_BINARY_NUGET OFF CACHE BOOL \"Enable to build NuGet packages\")
set (CPACK_BINARY_WIX OFF CACHE BOOL \"Enable to build WiX packages\")
set (CPACK_BINARY_ZIP OFF CACHE BOOL \"Enable to build ZIP packages\")
set (CPACK_SOURCE_7Z ON CACHE BOOL \"Enable to build 7-Zip source packages\")
set (CPACK_SOURCE_ZIP ON CACHE BOOL \"Enable to build ZIP source packages\")
set (CTEST_SUBMIT_RETRY_COUNT \"3\" CACHE STRING \"How many times to retry timed-out CTest submissions.\")
set (CTEST_SUBMIT_RETRY_DELAY \"5\" CACHE STRING \"How long to wait between timed-out CTest submissions.\")
set (CVSCOMMAND \"CVSCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CVS_UPDATE_OPTIONS \"-d -A -P\" CACHE STRING \"Options passed to the cvs update command.\")
set (DART_TESTING_TIMEOUT \"1500\" CACHE STRING \"Maximum time allowed before CTest will kill the test.\")
set (GITCOMMAND \"C:/Program Files/Git/cmd/git.exe\" CACHE FILEPATH \"Path to a program.\")
set (HGCOMMAND \"HGCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (MAKECOMMAND \"C:\\Users\\840\\Downloads\\cmake-3.16.0-win64-x64\\cmake-3.16.0-win64-x64\\bin\\cmake.exe --build . --config \\\"\${CTEST_CONFIGURATION_TYPE}\\\"\" CACHE STRING \"Command to build the project\")
set (MEMORYCHECK_COMMAND \"MEMORYCHECK_COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to the memory checking command, used for memory error detection.\")
set (P4COMMAND \"P4COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (PRINT_UNSYMBOLIZED_STACK_TRACES OFF CACHE BOOL \"Print raw pc values on symbolization failure\")
set (SITE \"DESKTOP-C0459JH\" CACHE STRING \"Name of the computer/site where compile is being run\")
set (SLURM_SBATCH_COMMAND \"SLURM_SBATCH_COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to the SLURM sbatch executable\")
set (SLURM_SRUN_COMMAND \"SLURM_SRUN_COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to the SLURM srun executable\")
set (SVNCOMMAND \"SVNCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (Unwind_INCLUDE_DIR \"Unwind_INCLUDE_DIR-NOTFOUND\" CACHE PATH \"unwind include directory\")
set (Unwind_LIBRARY \"Unwind_LIBRARY-NOTFOUND\" CACHE FILEPATH \"unwind library\")
set (Unwind_PLATFORM_LIBRARY \"Unwind_PLATFORM_LIBRARY-NOTFOUND\" CACHE FILEPATH \"unwind library platform\")
set (WITH_GFLAGS OFF CACHE BOOL \"Use gflags\")
set (WITH_PKGCONFIG ON CACHE BOOL \"Enable pkg-config support\")
set (WITH_THREADS ON CACHE BOOL \"Enable multithreading support\")
set (WITH_TLS ON CACHE BOOL \"Enable Thread Local Storage (TLS) support\")
set (WITH_UNWIND ON CACHE BOOL \"Enable libunwind support\")
set (gflags_DIR \"gflags_DIR-NOTFOUND\" CACHE PATH \"The directory containing a CMake configuration file for gflags.\")
" "-P" "C:/Users/840/Downloads/glog-master/glog-master/cmake/TestInitPackageConfig.cmake")
  set_tests_properties(cmake_package_config_init PROPERTIES  FIXTURES_SETUP "cmake_package_config" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;718;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cmake_package_config_init "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "-DTEST_BINARY_DIR=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config" "-DINITIAL_CACHE=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/glog_package_config_initial_cache.cmake" "-DCACHEVARS=set (BUILD_SHARED_LIBS OFF CACHE BOOL \"Build shared libraries\")
set (BUILD_TESTING ON CACHE BOOL \"Build the testing tree.\")
set (BZRCOMMAND \"BZRCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_CONFIGURATION_TYPES \"Debug;Release;MinSizeRel;RelWithDebInfo\" CACHE STRING \"Semicolon separated list of supported configuration types, only supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything else will be ignored.\")
set (CMAKE_CXX_FLAGS \"/DWIN32 /D_WINDOWS /W3 /GR /EHsc\" CACHE STRING \"Flags used by the CXX compiler during all build types.\")
set (CMAKE_CXX_FLAGS_DEBUG \"/MDd /Zi /Ob0 /Od /RTC1\" CACHE STRING \"Flags used by the CXX compiler during DEBUG builds.\")
set (CMAKE_CXX_FLAGS_MINSIZEREL \"/MD /O1 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the CXX compiler during MINSIZEREL builds.\")
set (CMAKE_CXX_FLAGS_RELEASE \"/MD /O2 /Ob2 /DNDEBUG\" CACHE STRING \"Flags used by the CXX compiler during RELEASE builds.\")
set (CMAKE_CXX_FLAGS_RELWITHDEBINFO \"/MD /Zi /O2 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the CXX compiler during RELWITHDEBINFO builds.\")
set (CMAKE_CXX_STANDARD_LIBRARIES \"kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib\" CACHE STRING \"Libraries linked by default with all C++ applications.\")
set (CMAKE_C_FLAGS \"/DWIN32 /D_WINDOWS /W3\" CACHE STRING \"Flags used by the C compiler during all build types.\")
set (CMAKE_C_FLAGS_DEBUG \"/MDd /Zi /Ob0 /Od /RTC1\" CACHE STRING \"Flags used by the C compiler during DEBUG builds.\")
set (CMAKE_C_FLAGS_MINSIZEREL \"/MD /O1 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the C compiler during MINSIZEREL builds.\")
set (CMAKE_C_FLAGS_RELEASE \"/MD /O2 /Ob2 /DNDEBUG\" CACHE STRING \"Flags used by the C compiler during RELEASE builds.\")
set (CMAKE_C_FLAGS_RELWITHDEBINFO \"/MD /Zi /O2 /Ob1 /DNDEBUG\" CACHE STRING \"Flags used by the C compiler during RELWITHDEBINFO builds.\")
set (CMAKE_C_STANDARD_LIBRARIES \"kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib\" CACHE STRING \"Libraries linked by default with all C applications.\")
set (CMAKE_EXE_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during all build types.\")
set (CMAKE_EXE_LINKER_FLAGS_DEBUG \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during DEBUG builds.\")
set (CMAKE_EXE_LINKER_FLAGS_MINSIZEREL \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during MINSIZEREL builds.\")
set (CMAKE_EXE_LINKER_FLAGS_RELEASE \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during RELEASE builds.\")
set (CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during RELWITHDEBINFO builds.\")
set (CMAKE_INSTALL_BINDIR \"bin\" CACHE PATH \"User executables (bin)\")
set (CMAKE_INSTALL_DATAROOTDIR \"share\" CACHE PATH \"Read-only architecture-independent data root (share)\")
set (CMAKE_INSTALL_INCLUDEDIR \"include\" CACHE PATH \"C header files (include)\")
set (CMAKE_INSTALL_LIBDIR \"lib\" CACHE PATH \"Object code libraries (lib)\")
set (CMAKE_INSTALL_LIBEXECDIR \"libexec\" CACHE PATH \"Program executables (libexec)\")
set (CMAKE_INSTALL_LOCALSTATEDIR \"var\" CACHE PATH \"Modifiable single-machine data (var)\")
set (CMAKE_INSTALL_OLDINCLUDEDIR \"/usr/include\" CACHE PATH \"C header files for non-gcc (/usr/include)\")
set (CMAKE_INSTALL_PREFIX \"C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64\" CACHE PATH \"Install path prefix, prepended onto install directories.\")
set (CMAKE_INSTALL_SBINDIR \"sbin\" CACHE PATH \"System admin executables (sbin)\")
set (CMAKE_INSTALL_SHAREDSTATEDIR \"com\" CACHE PATH \"Modifiable architecture-independent data (com)\")
set (CMAKE_INSTALL_SYSCONFDIR \"etc\" CACHE PATH \"Read-only single-machine data (etc)\")
set (CMAKE_LINKER \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/link.exe\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_LINKER \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x64/link.exe\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_MODULE_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during the creation of modules during all build types.\")
set (CMAKE_MODULE_LINKER_FLAGS_DEBUG \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of modules during DEBUG builds.\")
set (CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of modules during MINSIZEREL builds.\")
set (CMAKE_MODULE_LINKER_FLAGS_RELEASE \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of modules during RELEASE builds.\")
set (CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.\")
set (CMAKE_MT \"CMAKE_MT-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_MT \"CMAKE_MT-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CMAKE_RC_COMPILER \"rc\" CACHE FILEPATH \"RC compiler\")
set (CMAKE_RC_COMPILER \"rc\" CACHE FILEPATH \"RC compiler\")
set (CMAKE_RC_FLAGS \"-DWIN32\" CACHE STRING \"Flags for Windows Resource Compiler during all build types.\")
set (CMAKE_RC_FLAGS_DEBUG \"-D_DEBUG\" CACHE STRING \"Flags for Windows Resource Compiler during DEBUG builds.\")
set (CMAKE_SHARED_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during all build types.\")
set (CMAKE_SHARED_LINKER_FLAGS_DEBUG \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during DEBUG builds.\")
set (CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.\")
set (CMAKE_SHARED_LINKER_FLAGS_RELEASE \"/INCREMENTAL:NO\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during RELEASE builds.\")
set (CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO \"/debug /INCREMENTAL\" CACHE STRING \"Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.\")
set (CMAKE_SKIP_INSTALL_RPATH OFF CACHE BOOL \"If set, runtime paths are not added when installing shared libraries, but are added when building.\")
set (CMAKE_SKIP_RPATH OFF CACHE BOOL \"If set, runtime paths are not added when using shared libraries.\")
set (CMAKE_STATIC_LINKER_FLAGS \"/machine:x64\" CACHE STRING \"Flags used by the linker during the creation of static libraries during all build types.\")
set (CMAKE_VERBOSE_MAKEFILE OFF CACHE BOOL \"If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.\")
set (COVERAGE_COMMAND \"C:/MinGW/bin/gcov.exe\" CACHE FILEPATH \"Path to the coverage program that CTest uses for performing coverage inspection\")
set (COVERAGE_EXTRA_FLAGS \"-l\" CACHE STRING \"Extra command line flags to pass to the coverage tool\")
set (CPACK_BINARY_7Z OFF CACHE BOOL \"Enable to build 7-Zip packages\")
set (CPACK_BINARY_IFW OFF CACHE BOOL \"Enable to build IFW packages\")
set (CPACK_BINARY_NSIS ON CACHE BOOL \"Enable to build NSIS packages\")
set (CPACK_BINARY_NUGET OFF CACHE BOOL \"Enable to build NuGet packages\")
set (CPACK_BINARY_WIX OFF CACHE BOOL \"Enable to build WiX packages\")
set (CPACK_BINARY_ZIP OFF CACHE BOOL \"Enable to build ZIP packages\")
set (CPACK_SOURCE_7Z ON CACHE BOOL \"Enable to build 7-Zip source packages\")
set (CPACK_SOURCE_ZIP ON CACHE BOOL \"Enable to build ZIP source packages\")
set (CTEST_SUBMIT_RETRY_COUNT \"3\" CACHE STRING \"How many times to retry timed-out CTest submissions.\")
set (CTEST_SUBMIT_RETRY_DELAY \"5\" CACHE STRING \"How long to wait between timed-out CTest submissions.\")
set (CVSCOMMAND \"CVSCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (CVS_UPDATE_OPTIONS \"-d -A -P\" CACHE STRING \"Options passed to the cvs update command.\")
set (DART_TESTING_TIMEOUT \"1500\" CACHE STRING \"Maximum time allowed before CTest will kill the test.\")
set (GITCOMMAND \"C:/Program Files/Git/cmd/git.exe\" CACHE FILEPATH \"Path to a program.\")
set (HGCOMMAND \"HGCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (MAKECOMMAND \"C:\\Users\\840\\Downloads\\cmake-3.16.0-win64-x64\\cmake-3.16.0-win64-x64\\bin\\cmake.exe --build . --config \\\"\${CTEST_CONFIGURATION_TYPE}\\\"\" CACHE STRING \"Command to build the project\")
set (MEMORYCHECK_COMMAND \"MEMORYCHECK_COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to the memory checking command, used for memory error detection.\")
set (P4COMMAND \"P4COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (PRINT_UNSYMBOLIZED_STACK_TRACES OFF CACHE BOOL \"Print raw pc values on symbolization failure\")
set (SITE \"DESKTOP-C0459JH\" CACHE STRING \"Name of the computer/site where compile is being run\")
set (SLURM_SBATCH_COMMAND \"SLURM_SBATCH_COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to the SLURM sbatch executable\")
set (SLURM_SRUN_COMMAND \"SLURM_SRUN_COMMAND-NOTFOUND\" CACHE FILEPATH \"Path to the SLURM srun executable\")
set (SVNCOMMAND \"SVNCOMMAND-NOTFOUND\" CACHE FILEPATH \"Path to a program.\")
set (Unwind_INCLUDE_DIR \"Unwind_INCLUDE_DIR-NOTFOUND\" CACHE PATH \"unwind include directory\")
set (Unwind_LIBRARY \"Unwind_LIBRARY-NOTFOUND\" CACHE FILEPATH \"unwind library\")
set (Unwind_PLATFORM_LIBRARY \"Unwind_PLATFORM_LIBRARY-NOTFOUND\" CACHE FILEPATH \"unwind library platform\")
set (WITH_GFLAGS OFF CACHE BOOL \"Use gflags\")
set (WITH_PKGCONFIG ON CACHE BOOL \"Enable pkg-config support\")
set (WITH_THREADS ON CACHE BOOL \"Enable multithreading support\")
set (WITH_TLS ON CACHE BOOL \"Enable Thread Local Storage (TLS) support\")
set (WITH_UNWIND ON CACHE BOOL \"Enable libunwind support\")
set (gflags_DIR \"gflags_DIR-NOTFOUND\" CACHE PATH \"The directory containing a CMake configuration file for gflags.\")
" "-P" "C:/Users/840/Downloads/glog-master/glog-master/cmake/TestInitPackageConfig.cmake")
  set_tests_properties(cmake_package_config_init PROPERTIES  FIXTURES_SETUP "cmake_package_config" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;718;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
else()
  add_test(cmake_package_config_init NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cmake_package_config_generate "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "-DPATH=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x86" "C:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.17763.0\\x86" "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\tools" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\ide" "C:\\Program Files (x86)\\HTML Help Workshop" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin" "C:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319;" "C:\\Users\\840\\Desktop\\ImageMagick-7.0.9-Q16" "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler" "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin" "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\libnvvp" "C:\\Windows\\system32" "C:\\Windows" "C:\\Windows\\System32\\Wbem" "C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\840\\source\\repos\\bchcode\\Assets" "C:\\Users\\840\\source\\repos\\bchcode2\\Assets" "C:\\Program Files\\MATLAB\\R2018b\\runtime\\win64" "C:\\Program Files\\MATLAB\\R2018b\\bin" "C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common" "C:\\MinGW\\bin" "C:\\Strawberry\\c\\bin" "C:\\Strawberry\\perl\\site\\bin" "C:\\Strawberry\\perl\\bin" "C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR" "C:\\Program Files\\CMake\\bin" "C:\\WINDOWS\\system32" "C:\\WINDOWS" "C:\\WINDOWS\\System32\\Wbem" "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Git\\cmd" "C:\\Users\\840\\AppData\\Local\\Microsoft\\WindowsApps" "C:\\Users\\840\\Anaconda3" "C:\\Users\\840\\Anaconda3\\Scripts" "C:\\Users\\840\\Anaconda3\\Library\\bin" "C:\\Qt\\Qt5.12.1\\5.12.1\\msvc2017_64\\bin" "C:\\Users\\840\\AppData\\Local\\Programs\\Microsoft VS Code\\bin" "-DINITIAL_CACHE=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/glog_package_config_initial_cache.cmake" "-DTEST_BINARY_DIR=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/working_config" "-DSOURCE_DIR=C:/Users/840/Downloads/glog-master/glog-master/src/package_config_unittest/working_config" "-DPACKAGE_DIR=C:/Users/840/Downloads/glog-master/glog-master/build2" "-DGENERATOR=Visual Studio 15 2017" "-P" "C:/Users/840/Downloads/glog-master/glog-master/cmake/TestPackageConfig.cmake")
  set_tests_properties(cmake_package_config_generate PROPERTIES  FIXTURES_REQUIRED "cmake_package_config" FIXTURES_SETUP "cmake_package_config_working" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;725;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cmake_package_config_generate "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "-DPATH=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x86" "C:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.17763.0\\x86" "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\tools" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\ide" "C:\\Program Files (x86)\\HTML Help Workshop" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin" "C:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319;" "C:\\Users\\840\\Desktop\\ImageMagick-7.0.9-Q16" "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler" "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin" "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\libnvvp" "C:\\Windows\\system32" "C:\\Windows" "C:\\Windows\\System32\\Wbem" "C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\840\\source\\repos\\bchcode\\Assets" "C:\\Users\\840\\source\\repos\\bchcode2\\Assets" "C:\\Program Files\\MATLAB\\R2018b\\runtime\\win64" "C:\\Program Files\\MATLAB\\R2018b\\bin" "C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common" "C:\\MinGW\\bin" "C:\\Strawberry\\c\\bin" "C:\\Strawberry\\perl\\site\\bin" "C:\\Strawberry\\perl\\bin" "C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR" "C:\\Program Files\\CMake\\bin" "C:\\WINDOWS\\system32" "C:\\WINDOWS" "C:\\WINDOWS\\System32\\Wbem" "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Git\\cmd" "C:\\Users\\840\\AppData\\Local\\Microsoft\\WindowsApps" "C:\\Users\\840\\Anaconda3" "C:\\Users\\840\\Anaconda3\\Scripts" "C:\\Users\\840\\Anaconda3\\Library\\bin" "C:\\Qt\\Qt5.12.1\\5.12.1\\msvc2017_64\\bin" "C:\\Users\\840\\AppData\\Local\\Programs\\Microsoft VS Code\\bin" "-DINITIAL_CACHE=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/glog_package_config_initial_cache.cmake" "-DTEST_BINARY_DIR=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/working_config" "-DSOURCE_DIR=C:/Users/840/Downloads/glog-master/glog-master/src/package_config_unittest/working_config" "-DPACKAGE_DIR=C:/Users/840/Downloads/glog-master/glog-master/build2" "-DGENERATOR=Visual Studio 15 2017" "-P" "C:/Users/840/Downloads/glog-master/glog-master/cmake/TestPackageConfig.cmake")
  set_tests_properties(cmake_package_config_generate PROPERTIES  FIXTURES_REQUIRED "cmake_package_config" FIXTURES_SETUP "cmake_package_config_working" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;725;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cmake_package_config_generate "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "-DPATH=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x86" "C:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.17763.0\\x86" "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\tools" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\ide" "C:\\Program Files (x86)\\HTML Help Workshop" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin" "C:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319;" "C:\\Users\\840\\Desktop\\ImageMagick-7.0.9-Q16" "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler" "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin" "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\libnvvp" "C:\\Windows\\system32" "C:\\Windows" "C:\\Windows\\System32\\Wbem" "C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\840\\source\\repos\\bchcode\\Assets" "C:\\Users\\840\\source\\repos\\bchcode2\\Assets" "C:\\Program Files\\MATLAB\\R2018b\\runtime\\win64" "C:\\Program Files\\MATLAB\\R2018b\\bin" "C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common" "C:\\MinGW\\bin" "C:\\Strawberry\\c\\bin" "C:\\Strawberry\\perl\\site\\bin" "C:\\Strawberry\\perl\\bin" "C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR" "C:\\Program Files\\CMake\\bin" "C:\\WINDOWS\\system32" "C:\\WINDOWS" "C:\\WINDOWS\\System32\\Wbem" "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Git\\cmd" "C:\\Users\\840\\AppData\\Local\\Microsoft\\WindowsApps" "C:\\Users\\840\\Anaconda3" "C:\\Users\\840\\Anaconda3\\Scripts" "C:\\Users\\840\\Anaconda3\\Library\\bin" "C:\\Qt\\Qt5.12.1\\5.12.1\\msvc2017_64\\bin" "C:\\Users\\840\\AppData\\Local\\Programs\\Microsoft VS Code\\bin" "-DINITIAL_CACHE=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/glog_package_config_initial_cache.cmake" "-DTEST_BINARY_DIR=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/working_config" "-DSOURCE_DIR=C:/Users/840/Downloads/glog-master/glog-master/src/package_config_unittest/working_config" "-DPACKAGE_DIR=C:/Users/840/Downloads/glog-master/glog-master/build2" "-DGENERATOR=Visual Studio 15 2017" "-P" "C:/Users/840/Downloads/glog-master/glog-master/cmake/TestPackageConfig.cmake")
  set_tests_properties(cmake_package_config_generate PROPERTIES  FIXTURES_REQUIRED "cmake_package_config" FIXTURES_SETUP "cmake_package_config_working" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;725;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cmake_package_config_generate "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "-DPATH=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x86" "C:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.17763.0\\x86" "C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\tools" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\ide" "C:\\Program Files (x86)\\HTML Help Workshop" "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin" "C:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319;" "C:\\Users\\840\\Desktop\\ImageMagick-7.0.9-Q16" "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler" "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin" "C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\libnvvp" "C:\\Windows\\system32" "C:\\Windows" "C:\\Windows\\System32\\Wbem" "C:\\Windows\\System32\\WindowsPowerShell\\v1.0;C:\\Windows\\System32\\OpenSSH;C:\\Users\\840\\source\\repos\\bchcode\\Assets" "C:\\Users\\840\\source\\repos\\bchcode2\\Assets" "C:\\Program Files\\MATLAB\\R2018b\\runtime\\win64" "C:\\Program Files\\MATLAB\\R2018b\\bin" "C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common" "C:\\MinGW\\bin" "C:\\Strawberry\\c\\bin" "C:\\Strawberry\\perl\\site\\bin" "C:\\Strawberry\\perl\\bin" "C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR" "C:\\Program Files\\CMake\\bin" "C:\\WINDOWS\\system32" "C:\\WINDOWS" "C:\\WINDOWS\\System32\\Wbem" "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Git\\cmd" "C:\\Users\\840\\AppData\\Local\\Microsoft\\WindowsApps" "C:\\Users\\840\\Anaconda3" "C:\\Users\\840\\Anaconda3\\Scripts" "C:\\Users\\840\\Anaconda3\\Library\\bin" "C:\\Qt\\Qt5.12.1\\5.12.1\\msvc2017_64\\bin" "C:\\Users\\840\\AppData\\Local\\Programs\\Microsoft VS Code\\bin" "-DINITIAL_CACHE=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/glog_package_config_initial_cache.cmake" "-DTEST_BINARY_DIR=C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/working_config" "-DSOURCE_DIR=C:/Users/840/Downloads/glog-master/glog-master/src/package_config_unittest/working_config" "-DPACKAGE_DIR=C:/Users/840/Downloads/glog-master/glog-master/build2" "-DGENERATOR=Visual Studio 15 2017" "-P" "C:/Users/840/Downloads/glog-master/glog-master/cmake/TestPackageConfig.cmake")
  set_tests_properties(cmake_package_config_generate PROPERTIES  FIXTURES_REQUIRED "cmake_package_config" FIXTURES_SETUP "cmake_package_config_working" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;725;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
else()
  add_test(cmake_package_config_generate NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cmake_package_config_build "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "--build" "C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/working_config")
  set_tests_properties(cmake_package_config_build PROPERTIES  FIXTURES_REQUIRED "cmake_package_config;cmake_package_config_working" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;735;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cmake_package_config_build "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "--build" "C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/working_config")
  set_tests_properties(cmake_package_config_build PROPERTIES  FIXTURES_REQUIRED "cmake_package_config;cmake_package_config_working" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;735;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cmake_package_config_build "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "--build" "C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/working_config")
  set_tests_properties(cmake_package_config_build PROPERTIES  FIXTURES_REQUIRED "cmake_package_config;cmake_package_config_working" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;735;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cmake_package_config_build "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "--build" "C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config/working_config")
  set_tests_properties(cmake_package_config_build PROPERTIES  FIXTURES_REQUIRED "cmake_package_config;cmake_package_config_working" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;735;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
else()
  add_test(cmake_package_config_build NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(cmake_package_config_cleanup "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "-E" "remove_directory" "C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config")
  set_tests_properties(cmake_package_config_cleanup PROPERTIES  FIXTURES_CLEANUP "cmake_package_config" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;739;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(cmake_package_config_cleanup "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "-E" "remove_directory" "C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config")
  set_tests_properties(cmake_package_config_cleanup PROPERTIES  FIXTURES_CLEANUP "cmake_package_config" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;739;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(cmake_package_config_cleanup "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "-E" "remove_directory" "C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config")
  set_tests_properties(cmake_package_config_cleanup PROPERTIES  FIXTURES_CLEANUP "cmake_package_config" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;739;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(cmake_package_config_cleanup "C:/Users/840/Downloads/cmake-3.16.0-win64-x64/cmake-3.16.0-win64-x64/bin/cmake.exe" "-E" "remove_directory" "C:/Users/840/Downloads/glog-master/glog-master/build2/test_package_config")
  set_tests_properties(cmake_package_config_cleanup PROPERTIES  FIXTURES_CLEANUP "cmake_package_config" _BACKTRACE_TRIPLES "C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;739;add_test;C:/Users/840/Downloads/glog-master/glog-master/CMakeLists.txt;0;")
else()
  add_test(cmake_package_config_cleanup NOT_AVAILABLE)
endif()
